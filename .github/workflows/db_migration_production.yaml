name: Run DB Migration (Production)

on:
  workflow_dispatch:

jobs:
  db_migration_production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set the target AKS cluster
        uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_AKS }}'
          cluster-name: microservices
          resource-group: kubernetes

      - name: Set environment variables
        run: |
          echo "DEPLOYED_IMAGE_TAG=$(kubectl get deployment tove-production-app -o=jsonpath='{$.spec.template.spec.containers[:1].image}' | cut -d':' -f 2)" >> $GITHUB_ENV
          echo "JOB_NAME=tove-db-migration-production-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Modify & apply template
        run: |
          sed "s/__IMAGE_TAG__/$DEPLOYED_IMAGE_TAG/g" ./kubernetes/db-migrate-production.tmpl \
            | sed "s/__JOB_NAME__/$JOB_NAME/g" \
            | kubectl apply -f -

      - name: Wait for completion or failure
        run: |
          kubectl wait --for=condition=complete --timeout=86400s job/$JOB_NAME & completion_pid=$!
          kubectl wait --for=condition=failed --timeout=86400s job/$JOB_NAME && exit 1 & failure_pid=$!
          wait -n $completion_pid $failure_pid
          exit_code=$?
          echo "JOB_EXIT_CODE=$exit_code" >> $GITHUB_ENV
          exit $exit_code

      - name: Log output
        if: always()
        run: |
          echo "Job Description:"
          kubectl describe job/$JOB_NAME
          echo "Pod Logs:"
          kubectl logs $(kubectl get pods --selector=job-name=$JOB_NAME -o=jsonpath='{$.items[*].metadata.name}')

      - name: Clean up job if successful
        if: always()
        run: |
          if [ $JOB_EXIT_CODE -eq 0 ]; then
            kubectl delete job $JOB_NAME
          fi

  slack_notification:
    name: Slack notification
    uses: zooniverse/ci-cd/.github/workflows/slack_notification.yaml@mani
    needs: db_migration_staging
    if: always()
    with:
      commit_id: ${{ github.sha }}
      job_name: Run DB Migration (Production) / db_migration_production
      status: ${{ needs.deploy_staging.result }}
      title: "Tove Producion database migration complete"
      title_link: "https://alice.preview.zooniverse.org"
    secrets:
      slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}